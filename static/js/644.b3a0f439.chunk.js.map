{"version":3,"file":"static/js/644.b3a0f439.chunk.js","mappings":"+QAEaA,EAAOC,EAAAA,GAAAA,KAAH,0LAUJC,EAASD,EAAAA,GAAAA,OAAH,uNAcNE,EAAQF,EAAAA,GAAAA,MAAH,+U,SCtBLG,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAkBA,OACE,UAACR,EAAD,CAAMK,SAZW,SAAAI,GAGjB,GAFAA,EAAIC,iBAEiB,KAAjBH,EAAMI,OACR,OAAOC,MAAM,2BAGfP,EAASE,GACTC,EAAS,GACV,EAGC,WACE,SAACL,EAAD,CACEU,KAAK,OACLC,aAAa,MACbC,MAAOR,EACPS,YAAY,sBACZC,SAvBc,SAAAR,GAClB,IAAQM,EAAUN,EAAIS,OAAdH,MACRP,EAASO,EACV,KAsBG,SAACb,EAAD,CAAQW,KAAK,SAAb,sBAGL,E,SCjCYM,EAAUlB,EAAAA,GAAAA,KAAH,2CCuDpB,EAjDe,WAAO,IAAD,EACnB,GAAsCK,EAAAA,EAAAA,UAAS,MAA/C,eAAOc,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAS,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,IAE/CC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,WAAgCF,GAAhC,iGAEuBG,EAAAA,EAAAA,IAAeH,GAFtC,OAEUI,EAFV,OAGIV,EAAeU,EAAKC,SAHxB,gDAKIC,QAAQC,IAAI,KAAMC,SALtB,yDALc,wBACI,KAAdR,GADU,oCAadS,CAAiBT,EAClB,GAAE,CAACA,IAQJ,OACE,UAACR,EAAD,YACE,SAACf,EAAD,CAAWC,SARK,SAAAE,GAClB,IAAM8B,EAAkB9B,EAAM+B,cAAc3B,OAE5Ca,EADuC,KAApBa,EAAyB,CAAE9B,MAAO8B,GAAoB,CAAC,EAE3E,IAKIjB,IACC,wBACGA,EAAYmB,KAAI,SAAAC,GAAK,OACpB,eAAmBC,MAAO,CAAEC,aAAc,GAA1C,UACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAMI,IAAMC,MAAO,CAAEC,KAAMrB,GAAhD,SACGe,EAAMO,eACHP,EAAMO,eACNP,EAAMQ,iBAJLR,EAAMI,GADK,QAa/B,C","sources":["components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  /* align-items: center; */\n  width: 100%;\n  max-width: 300px;\n  /* background-color: gray;\n  border-radius: 3px;\n  overflow: hidden; */\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 68px;\n  height: 38px;\n  border-radius: 3px;\n  border: none;\n  cursor: pointer;\n\n  &:hover {\n    background-color: darkgray;\n    color: white;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font-size: 20px;\n  padding-left: 4px;\n  padding-right: 4px;\n  border: 2px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n  &:focus {\n    outline: none;\n    border-color: cadetblue;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Form, Button, Input } from './SearchBox.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const inputChange = evt => {\n    const { value } = evt.target;\n    setQuery(value);\n  };\n\n  const formSubmit = evt => {\n    evt.preventDefault();\n\n    if (query.trim() === '') {\n      return alert('Enter request to search');\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <Form onSubmit={formSubmit}>\n      <Input\n        type=\"text\"\n        autocomplete=\"off\"\n        value={query}\n        placeholder=\"Find movie by title\"\n        onChange={inputChange}\n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MainBox = styled.main`\n  margin: 0 auto;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\n\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { getMovieByName } from 'api/moviesApi';\n\nimport { MainBox } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchMovie, setSearchMovie] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n\n    async function fetchMovieByName(movieName) {\n      try {\n        const data = await getMovieByName(movieName);\n        setSearchMovie(data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    fetchMovieByName(movieName);\n  }, [movieName]);\n\n  const updateQuery = query => {\n    const normalizedQuery = query.toLowerCase().trim();\n    const nextParams = normalizedQuery !== '' ? { query: normalizedQuery } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <MainBox>\n      <SearchBox onSubmit={updateQuery} />\n      {searchMovie && (\n        <ul>\n          {searchMovie.map(movie => (\n            <li key={movie.id} style={{ marginBottom: 8 }}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.original_title\n                  ? movie.original_title\n                  : movie.original_name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </MainBox>\n  );\n};\n\nexport default Movies;\n"],"names":["Form","styled","Button","Input","SearchBox","onSubmit","useState","query","setQuery","evt","preventDefault","trim","alert","type","autocomplete","value","placeholder","onChange","target","MainBox","searchMovie","setSearchMovie","useSearchParams","searchParams","setSearchParams","location","useLocation","movieName","get","useEffect","getMovieByName","data","results","console","log","message","fetchMovieByName","normalizedQuery","toLowerCase","map","movie","style","marginBottom","to","id","state","from","original_title","original_name"],"sourceRoot":""}